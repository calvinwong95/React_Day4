{"version":3,"sources":["containers/dashboard/dashboard.module.css","components/tasklist/index.js","containers/dashboard/index.js","App.js","reportWebVitals.js","index.js","components/tasklist/tasklist.module.css"],"names":["module","exports","Tasklist","className","classes","task_holder","onClick","this","props","delTodo","title","keyT","React","Component","Dashboard","state","items","addNew","bind","filterItem","filter","list","key","setState","console","log","_inputElement","value","newItem","Date","now","style","dashboardStyle","form","type","placeholder","ref","a","map","display","flexDirection","alignItems","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8FACAA,EAAOC,QAAU,CAAC,KAAO,0B,qMCEZC,EAAb,4JAII,WACI,OACI,sBAAMC,UAAWC,IAAQC,YAAaC,QAASC,KAAKC,MAAMC,QAA1D,UACI,6BAAMF,KAAKC,MAAME,QACjB,6BAAMH,KAAKC,MAAMG,cARjC,GAA8BC,IAAMC,WAcrBX,I,iBCbFY,EAAb,kDAEI,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAO,CACRC,MAAO,IAEX,EAAKC,OAAS,EAAKA,OAAOC,KAAZ,gBALC,EAFvB,2CAUI,SAAQP,GACJ,IAAMQ,EAAaZ,KAAKQ,MAAMC,MAAMI,QAAQ,SAACC,GAAD,OAC5CA,EAAKC,MAAOX,KAEZJ,KAAKgB,SAAS,CAACP,MAAOG,MAd9B,oBAkBI,WAAU,IAAD,OAKL,GAHAK,QAAQC,IAAIlB,KAAKmB,cAAcC,OAGE,KAA7BpB,KAAKmB,cAAcC,MAAc,CAEjC,IAAMC,EAAU,CACZlB,MAAOH,KAAKmB,cAAcC,MAC1BL,IAAKO,KAAKC,OAWdvB,KAAKgB,SAAS,CAACP,MAAM,GAAD,mBAAMT,KAAKQ,MAAMC,OAAjB,CAAwBY,MAAW,kBAAIJ,QAAQC,IAAI,EAAKV,MAAMC,aAtC9F,oBA+CI,WAAU,IAAD,OAML,OACI,sBAAKe,MAAOC,EAAZ,UACI,sBAAK7B,UAAWC,IAAQ6B,KAAxB,UACA,uBAAOC,KAAK,OAAOC,YAAY,WAC/BC,IAAK,SAACC,GAAD,OAAO,EAAKX,cAAgBW,KAIjC,wBAAQ/B,QAASC,KAAKU,OAAtB,oBAEA,8BAGQV,KAAKQ,MAAMC,MAAMsB,KAAK,SAACjB,GAAD,OAClB,cAAC,EAAD,CAAUX,MAAOW,EAAKX,MAAQD,QAAS,WAAK,EAAKA,QAAQY,EAAKC,oBAnE1F,GAA+BV,IAAMC,WA+E/BmB,EAAiB,CACnBO,QAAQ,OAAQC,cAAc,SAC9BC,WAAW,UAGA3B,IC5EA4B,MARf,WACE,OACE,qBAAKvC,UAAU,MAAf,SACE,cAAC,EAAD,OCKSwC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfA3C,EAAOC,QAAU,CAAC,YAAc,iC","file":"static/js/main.e1b18e34.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"dashboard_form__2u0ib\"};","import React from 'react';\r\nimport classes from \"./tasklist.module.css\";\r\n\r\nexport class Tasklist extends React.Component {\r\n\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div  className={classes.task_holder} onClick={this.props.delTodo}>\r\n                <h2 >{this.props.title}</h2>\r\n                <h2 >{this.props.keyT}</h2>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Tasklist;\r\n","import React  from 'react';\r\nimport Tasklist from \"../../components/tasklist\";\r\nimport classes from \"./dashboard.module.css\";\r\n\r\nexport class Dashboard extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {\r\n            items: [],\r\n        }\r\n        this.addNew = this.addNew.bind(this);\r\n    }\r\n\r\n    delTodo(keyT) {\r\n        const filterItem = this.state.items.filter( (list) =>\r\n        list.key!== keyT);\r\n\r\n        this.setState({items: filterItem});\r\n    }\r\n\r\n\r\n    addNew() {\r\n        \r\n        console.log(this._inputElement.value);\r\n\r\n        //push to an array\r\n        if (this._inputElement.value !== \"\") {\r\n\r\n            const newItem = {\r\n                title: this._inputElement.value,\r\n                key: Date.now()\r\n            }\r\n\r\n\r\n            //Method 1\r\n            //get the current items and concat the newItem\r\n            // this.setState((prevState)=> {\r\n            //     return {items: prevState.items.concat(newItem)};\r\n            // }, () => console.log(this.state.items));\r\n\r\n            //Method 2 - Deconstructing\r\n            this.setState({items: [...this.state.items, newItem]}, ()=>console.log(this.state.items));\r\n\r\n\r\n            //to change the input immediately\r\n            // this.setState({items: this._inputElement.value}, ()=> console.log('current array',this.state.items));\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n\r\n\r\n\r\n        return (\r\n            <div style={dashboardStyle}>\r\n                <div className={classes.form}>\r\n                <input type=\"text\" placeholder=\"Add Task\" \r\n                ref={(a) => this._inputElement = a}>\r\n\r\n                </input>\r\n\r\n                <button onClick={this.addNew}>Add</button>\r\n                </div>\r\n                <div>\r\n\r\n                    {\r\n                        this.state.items.map( (list) => \r\n                            <Tasklist title={list.title}  delTodo={()=>{this.delTodo(list.key)}}/>\r\n\r\n                        )\r\n                    }\r\n                \r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst dashboardStyle = {\r\n    display:\"flex\", flexDirection:\"column\",\r\n    alignItems:\"center\"\r\n}\r\n\r\nexport default Dashboard;\r\n","\nimport './App.css';\nimport Dashboard from \"./containers/dashboard\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Dashboard />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task_holder\":\"tasklist_task_holder__WV5gp\"};"],"sourceRoot":""}